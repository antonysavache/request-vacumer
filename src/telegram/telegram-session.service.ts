import { Injectable, Logger } from '@nestjs/common';

@Injectable()
export class TelegramSessionService {
  private readonly logger = new Logger(TelegramSessionService.name);

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å–µ—Å—Å–∏–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
   */
  getSessionString(): string | null {
    const envSession = process.env.TELEGRAM_SESSION_STRING;
    if (envSession && envSession.trim()) {
      this.logger.log('Using session from environment variable');
      return envSession.trim();
    }

    this.logger.log('No session found in environment variable');
    return null;
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Å—Å–∏—è
   */
  hasSession(): boolean {
    const sessionString = this.getSessionString();
    return sessionString !== null && sessionString.length > 0;
  }

  /**
   * –õ–æ–≥–∏—Ä—É–µ—Ç —Å–µ—Å—Å–∏—é –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ .env (—Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
   */
  logSessionForEnv(sessionString: string): void {
    this.logger.log('‚úÖ Authentication successful!');
    this.logger.log('üìã Session string for .env file:');
    this.logger.log(`TELEGRAM_SESSION_STRING=${sessionString}`);
    this.logger.log('üí° Copy this line to your .env file');
  }

  /**
   * –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ (–±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è)
   */
  saveSessionString(sessionString: string): void {
    this.logger.log('üí° Session ready for .env file');
    this.logSessionForEnv(sessionString);
  }

  clearSession(): void {
    this.logger.log('üóëÔ∏è To clear session, remove TELEGRAM_SESSION_STRING from .env file');
  }
}
